SQL

DO $$
DECLARE
    category_list text[] := '{"Internal-ev", "Internal-nx", "Internal-mw", "Internal-zl", "External-ev"}';
    col_defs text := '';
    query text;
BEGIN
    -- Construct dynamic column definitions
    FOR category IN SELECT unnest(category_list) LOOP
        col_defs := col_defs || format(
            'SPLIT_PART(COALESCE(ct.%I, ''''), ''||'', 1) AS %I,',
            category, replace(category, '-', '') || 'PDK' -- Example: 'internalEVPDK'
        );
        col_defs := col_defs || format(
            'SPLIT_PART(COALESCE(ct.%I, ''''), ''||'', 2) AS %I,',
            category, replace(category, '-', '') || 'Schedule'
        );
        col_defs := col_defs || format(
            'SPLIT_PART(COALESCE(ct.%I, ''''), ''||'', 3) AS %I,',
            category, replace(category, '-', '') || 'ScheduleDates'
        );
    END LOOP;

    -- Remove trailing comma
    col_defs := rtrim(col_defs, ',');

    -- Build the final query
    query := format(
        'SELECT unique_row_name[5] AS vendorName, unique_row_name[6] AS Name, unique_row_name[7] AS DateType, unique_row_name[8] AS Id, %s FROM dynamic_crosstab(%L)',
        col_defs, 'your_source_sql_here' -- Replace with your actual source query
    );

    -- Execute the query (or RAISE NOTICE '%' query; to print it for debugging)
    EXECUTE query;
END;
$$;

  getFriendlyName(columnName: string): string {
    const columnMappings: { [key: string]: string } = {
      id: "ID",
      ipname: "IP Name",
      datatype: "Data Type",
      projectid: "Project ID",
      vendorname: "Vendor Name",
      techname: "Tech Name",
      externalevtdk: "External Event TDK",
      internalevtdk: "Internal Event TDK",
      externalefvtdk: "External EFV TDK",
      internalefvtdk: "Internal EFV TDK",
      collateralitemid: "Collateral Item ID",
      externalevschedule: "External EV Schedule",
      internalevschedule: "Internal EV Schedule",
      externalefvschedule: "External EFV Schedule",
      internalefvschedule: "Internal EFV Schedule",
      externalefvscheduledates: "External EFV Schedule Dates",
      internalefvscheduledates: "Internal EFV Schedule Dates"
    };
    return columnMappings[columnName] || columnName;
  }
